{"version":3,"sources":["reportWebVitals.js","api/ajax.js","redux/main-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/store.js","redux/selectors.js","components/common/FormControl.jsx","api/validators.js","components/Aside/GroupCreationForm/GroupCreationForm.jsx","components/Aside/UpdatePhotoForm/UpdatePhotoForm.jsx","components/Aside/TaskCreationForm/SelectGroupOptionsContainer.jsx","components/Aside/TaskCreationForm/TaskCreationForm.jsx","components/Aside/GroupLinks/GroupLink.jsx","components/Aside/GroupLinks/GroupLinks.jsx","components/common/Preloader.jsx","components/Aside/Avatar/Avatar.jsx","components/Aside/Aside.jsx","components/Main/Header/SearchForm.jsx","components/Main/Header/Header.jsx","api/tools.js","components/Main/MainBody/Group/GroupEditForm.jsx","components/Main/MainBody/Group/Task/TaskEditForm.jsx","components/Main/MainBody/Group/Task/Task.jsx","components/Main/MainBody/Group/Group.jsx","components/Main/MainBody/MainBody.jsx","api/hooks.js","components/Main/Main.jsx","components/MainAppPage/MainAppPage.jsx","components/MainAppPage/MainAppPageContainer.jsx","components/Auth/Login/Login.jsx","components/Auth/Registration/Registration.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","AuthAPI","get","res","status","data","err","body","post","headers","Cookie","response","console","log","UserDataAPI","filter","url","file","formdata","FormData","append","SET_GROUPS","ADD_GROUP","UPDATE_GROUP","DELETE_GROUP","TOGGLE_IS_FETCHING","SET_MINI_GROUPS","TOGGLE_IS_FETCHING_MINI_GROUPS","ADD_TASK","UPDATE_TASK","DELETE_TASK","TOGGLE_IS_FILTERED","initialState","groups","miniGroups","filterText","isFetchingMiniGroups","isFetching","isFiltered","setGroups","type","updateGroup","id","groupname","deleteGroup","toggleIsFetching","boolean","toggleIsFetchingMiniGroups","updateTask","group_id","taskName","timedelta","task_type","is_completed","deadline","deleteTask","toggleIsFiltered","getUserGroups","dispatch","a","mainReducer","state","action","map","group","tasks","task","name","miniGroup","newTaskText","created_at","createdAt","groupId","SET_USER_DATA","TOGGLE_IS_FETCHING_USER_DATA","TOGGLE_IS_FETCHING_PHOTO","TOGGLE_IS_AUTH","UPDATE_PHOTO","user","username","photo","isAuth","isFetchingPhoto","isFetchingUserData","setUserData","photoUrl","toggleIsFetchingUserData","toggleIsFetchingPhoto","toggleIsAuth","getUserData","login","message","stopSubmit","_error","authReducer","SET_IS_INITIALIZED","isInitialized","appReducer","rootReducer","combineReducers","main","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","selectIsAuth","selectGroups","selectUsername","selectUserPhoto","selectIsFetchingGroups","selectIsFetchingUser","selectIsFiltered","selectMiniGroups","selectMiniGroupsIsFetching","selectIsFetchingPhoto","Input","input","meta","props","hasError","touched","error","className","Select","children","required","value","maxLengthCreator","maxLength","length","usernameTemplate","test","maxLength30","GroupCreationForm","method","onSubmit","handleSubmit","Field","component","placeholder","validate","reduxForm","onSubmitSuccess","_","reset","connect","createGroup","formData","updatePhoto","e","target","files","preventDefault","accept","elem","TaskCreationForm","SelectGroupOptionsContainer","createTask","GroupLink","width","viewBox","xmlns","d","GroupLinksLoading","elems","i","count","push","getMiniGroups","useEffect","Preloader","styles","style","position","src","alt","isFetchingGroups","Search","autoComplete","disabled","height","fill","onClick","logout","getColumns","columnsCount","template","forEach","index","column","Math","ceil","ownProps","updateTaskGroup","useState","isDeleted","setIsDeleted","selectDeleted","initialValues","heading","values","errors","setSubmitting","Object","keys","onToggleEditMode","isSubmitting","render","msg","updateTodoTask","isSelected","setIsSelected","completeTask","isCompleted","typeName","Task","isEdit","setIsEdit","prev","timeLeft","margin","Group","columns","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowSize","dependency","Main","MainAppPage","to","maxLength150","Login","Registration","registrate","password","password1","App","this","init","basename","exact","path","MainAppPageContainer","RegistrationForm","LoginForm","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86d653e9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\n\r\n\r\nconst instance = axios.create({\r\n   withCredentials: true,\r\n   // baseURL: 'http://localhost:8000/main/',\r\n   baseURL: 'https://todo-app-large-backend.herokuapp.com/main/',\r\n});\r\n\r\n\r\nexport const AuthAPI = {\r\n   getMyUserInfo() {\r\n      return instance.get('get_user_info/').then(res => res.status === 200 && res.data, err => null);\r\n   },\r\n\r\n   login(body) {\r\n      return instance.post('login/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status, err => err.response ? err.response.status : 500);\r\n   },\r\n\r\n   logout() {\r\n      return instance.get('logout/').then(res => res.status);\r\n   },\r\n\r\n   registration(body) {\r\n      console.log(Cookie.get('csrftoken'))\r\n      return instance.post('registration/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status, err => err.response ? err.response.status : 500);\r\n   },\r\n};\r\n\r\n\r\nexport const UserDataAPI = {\r\n   getGroups(filter) {\r\n      let url = 'get_user_groups/';\r\n      if (filter !== null) url = `get_user_groups/?filter=${filter}`;\r\n      return instance.get(url).then(res => res.status === 200 && res.data, err => null);\r\n   },\r\n\r\n   getMiniGroups() {\r\n      return instance.get('get_user_mini_groups/').then(res => res.status === 200 && res.data, err => null);\r\n   },\r\n\r\n   createGroup(body) {\r\n      return instance.post('create_group/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status === 201 && res.data, err => null);\r\n   },\r\n\r\n   createTask(body) {\r\n      return instance.post('create_task/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status === 201 && res.data, err => null);\r\n   },\r\n\r\n   updatePhoto(file) {\r\n      const formdata = new FormData();\r\n      formdata.append('photo', file);\r\n      \r\n      return instance.post('update_photo/', formdata, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status === 201 && res.data, err => null);\r\n   },\r\n\r\n   updateTask(body) {\r\n      return instance.post('update_task/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status === 201 ? res.data : res.status, err => null);\r\n   },\r\n\r\n   updateGroup(body) {\r\n      return instance.post('update_group/', body, {\r\n         headers: {\r\n            'X-CSRFToken': Cookie.get('csrftoken'),\r\n         }\r\n      }).then(res => res.status === 201 ? res.data : res.status, err => null);\r\n   }\r\n};","import { UserDataAPI } from '../api/ajax';\r\n\r\n// groups:\r\nconst SET_GROUPS = 'my-app/main/SET_GROUPS';\r\nconst ADD_GROUP = 'my-app/main/ADD_GROUP';\r\nconst UPDATE_GROUP = 'my-app/main/UPDATE_GROUP';\r\nconst DELETE_GROUP = 'my-app/main/DELETE_GROUP';\r\nconst TOGGLE_IS_FETCHING = 'my-app/main/TOGGLE_IS_FETCHING';\r\n// mini groups:\r\nconst SET_MINI_GROUPS = 'my-app/main/SET_MINI_GROUPS';\r\nconst TOGGLE_IS_FETCHING_MINI_GROUPS = 'my-app/main/TOGGLE_IS_FETCHING_MINI_GROUPS';\r\n// tasks:\r\nconst ADD_TASK = 'my-app/main/ADD_TASK';\r\nconst UPDATE_TASK = 'my-app/main/UPDATE_TASK';\r\nconst DELETE_TASK = 'my-app/main/DELETE_TASK';\r\n// filter:\r\nconst TOGGLE_IS_FILTERED = 'my-app/main/TOGGLE_IS_FILTERED';\r\n\r\n\r\nconst initialState = {\r\n   groups: [],\r\n   miniGroups: [],\r\n   filterText: '',\r\n   isFetchingMiniGroups: false,\r\n   isFetching: false,\r\n   isFiltered: false,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_GROUPS:\r\n         return {\r\n            ...state,\r\n            groups: action.groups.map(group => ({\r\n               ...group,\r\n               tasks: group.tasks.map(task => ({\r\n                  ...task,\r\n               })),\r\n            }))\r\n         };\r\n      case ADD_GROUP:\r\n         return {\r\n            ...state,\r\n            groups: [...state.groups, {\r\n               id: action.id,\r\n               name: action.name,\r\n               tasks: [],\r\n            }],\r\n            miniGroups: [...state.miniGroups, {\r\n               id: action.id,\r\n               name: action.name,\r\n            }]\r\n         };\r\n      case UPDATE_GROUP:\r\n         return {\r\n            ...state,\r\n            groups: state.groups.map(group => {\r\n               if (group.id === action.id) {\r\n                  return {\r\n                     ...group,\r\n                     name: action.groupname\r\n                  }\r\n               } else {\r\n                  return group;\r\n               }\r\n            }),\r\n            miniGroups: state.miniGroups.map(miniGroup => {\r\n               if (miniGroup.id === action.id) {\r\n                  return {\r\n                     ...miniGroup,\r\n                     name: action.groupname\r\n                  }\r\n               } else {\r\n                  return miniGroup;\r\n               }\r\n            }),\r\n         };\r\n      case DELETE_GROUP:\r\n         return {\r\n            ...state,\r\n            groups: state.groups.filter(group => group.id !== action.id),\r\n            miniGroups: state.miniGroups.filter(miniGroup => miniGroup.id !== action.id),\r\n         };\r\n      case TOGGLE_IS_FETCHING:\r\n         return {\r\n            ...state,\r\n            isFetching: action.boolean\r\n         };\r\n      case SET_MINI_GROUPS:\r\n         return {\r\n            ...state,\r\n            miniGroups: action.miniGroups\r\n         };\r\n      case TOGGLE_IS_FETCHING_MINI_GROUPS:\r\n         return {\r\n            ...state,\r\n            isFetchingMiniGroups: action.boolean\r\n         };\r\n      case ADD_TASK:\r\n         return {\r\n            ...state,\r\n            groups: state.groups.map(group => {\r\n               if (group.id === action.group_id) {\r\n                  return {\r\n                     ...group,\r\n                     tasks: [...group.tasks, {\r\n                        id: action.id,\r\n                        is_completed: false,\r\n                        name: action.newTaskText,\r\n                        task_type: action.task_type,\r\n                        created_at: action.createdAt,\r\n                        deadline: action.deadline,\r\n                        timedelta: action.timedelta,\r\n                     }]\r\n                  }\r\n               } else {\r\n                  return group;\r\n               }\r\n            })\r\n         };\r\n      \r\n      case UPDATE_TASK:\r\n         return {\r\n            ...state,\r\n            groups: state.groups.map(group => {\r\n               if (group.groupId === action.groupId) {\r\n                  return {\r\n                     ...group,\r\n                     tasks: group.tasks.map(task => {\r\n                        if (task.id === action.id) {\r\n                           return {\r\n                              ...task,\r\n                              name: action.taskName || task.name,\r\n                              timedelta: action.timedelta || task.timedelta,\r\n                              task_type: action.task_type || task.task_type,\r\n                              is_completed: action.is_completed,\r\n                              deadline: action.deadline\r\n                           };\r\n                        } else {\r\n                           return task;\r\n                        }\r\n                     })\r\n                  }\r\n               } else {\r\n                  return group;\r\n               }\r\n            })\r\n         };\r\n      case DELETE_TASK:\r\n         return {\r\n            ...state,\r\n            groups: state.groups.map(group => ({\r\n               ...group,\r\n               tasks: group.tasks.filter(task => task.id !== action.id),\r\n            }))\r\n         };\r\n      case TOGGLE_IS_FILTERED:\r\n         return {\r\n            ...state,\r\n            isFiltered: action.boolean\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\n\r\n// ACTION_CREATORS here:\r\nconst setGroups = (groups) =>\r\n   ({ type: SET_GROUPS, groups });\r\n\r\nconst addGroup = (id, name) =>\r\n   ({ type: ADD_GROUP, id, name });\r\n\r\nexport const updateGroup = (id, groupname) =>\r\n   ({ type: UPDATE_GROUP, id, groupname });\r\n\r\nconst deleteGroup = (id) =>\r\n   ({ type: DELETE_GROUP, id });\r\n\r\nconst toggleIsFetching = (boolean) =>\r\n   ({ type: TOGGLE_IS_FETCHING, boolean });\r\n\r\nexport const setMiniGroups = (miniGroups) =>\r\n   ({ type: SET_MINI_GROUPS, miniGroups });\r\n\r\nexport const toggleIsFetchingMiniGroups = (boolean) =>\r\n   ({ type: TOGGLE_IS_FETCHING_MINI_GROUPS, boolean });\r\n\r\nconst addTask = (group_id, newTaskText, task_type, timedelta, createdAt, id, deadline) =>\r\n   ({ type: ADD_TASK, group_id, newTaskText, task_type, timedelta, createdAt, id, deadline });\r\n\r\nexport const updateTask = (group_id, id, taskName, timedelta, task_type, is_completed, deadline) =>\r\n   ({ type: UPDATE_TASK, group_id, id, taskName, timedelta, task_type, is_completed, deadline });\r\n\r\nconst deleteTask = (id) =>\r\n   ({ type: DELETE_TASK, id });\r\n\r\nexport const toggleIsFiltered = (boolean) =>\r\n   ({ type: TOGGLE_IS_FILTERED, boolean });\r\n\r\n\r\n// THUNKS here:\r\nexport const getUserGroups = (filter = null) => async (dispatch) => {\r\n   dispatch(toggleIsFetching(true));\r\n   const data = await UserDataAPI.getGroups(filter);\r\n   if (data) {\r\n      dispatch(setGroups(data));\r\n      if (filter === null) {\r\n         dispatch(toggleIsFiltered(false));\r\n      } else {\r\n         dispatch(toggleIsFiltered(true));\r\n      }\r\n   }\r\n   dispatch(toggleIsFetching(false));\r\n};\r\n\r\nexport const getMiniGroups = () => async dispatch => {\r\n   dispatch(toggleIsFetchingMiniGroups(true));\r\n   const data = await UserDataAPI.getMiniGroups();\r\n   if (data) {\r\n      dispatch(setMiniGroups(data));\r\n   }\r\n   dispatch(toggleIsFetchingMiniGroups(false));\r\n};\r\n\r\nexport const createGroup = (body) => async (dispatch) => {\r\n   const data = await UserDataAPI.createGroup(body);\r\n   if (data) {\r\n      dispatch(addGroup(data.id, data.name));\r\n   }\r\n};\r\n\r\nexport const createTask = (body, groupId) => async (dispatch) => {\r\n   const data = await UserDataAPI.createTask(body);\r\n   if (data) {\r\n      dispatch(addTask(groupId, data.name, data.task_type, data.timedelta, data.created_at, data.id, data.deadline));\r\n   }\r\n};\r\n\r\nexport const updateTodoTask = (body, id, taskName, groupId) => async (dispatch) => {\r\n   const data = await UserDataAPI.updateTask(body);\r\n   if (data && typeof data !== 'number') {\r\n      dispatch(updateTask(groupId, id, taskName, data.timedelta, data.task_type, data.is_completed, data.deadline));\r\n   } else if (data === 204) {\r\n      dispatch(deleteTask(id));\r\n   }\r\n};\r\n\r\nexport const updateTaskGroup = (body, id) => async (dispatch) => {\r\n   const data = await UserDataAPI.updateGroup(body);\r\n   if (data && typeof data !== 'number') {\r\n      dispatch(updateGroup(id, data.name));\r\n   } else if (data === 204) {\r\n      dispatch(deleteGroup(id));\r\n   }\r\n};\r\n\r\nexport default mainReducer;","import { stopSubmit } from 'redux-form';\r\nimport { AuthAPI, UserDataAPI } from '../api/ajax';\r\n\r\n\r\nconst SET_USER_DATA = 'my-app/auth/SET_USER_DATA';\r\nconst TOGGLE_IS_FETCHING_USER_DATA = 'my-app/auth/TOGGLE_IS_FETCHING_USER_DATA';\r\nconst TOGGLE_IS_FETCHING_PHOTO = 'my-app/auth/TOGGLE_IS_FETCHING_PHOTO';\r\nconst TOGGLE_IS_AUTH = 'my-app/auth/TOGGLE_IS_AUTH';\r\nconst UPDATE_PHOTO = 'my-app/auth/UPDATE_PHOTO';\r\n\r\n\r\nconst initialState = {\r\n   user: {\r\n      username: null,\r\n      photo: null,\r\n   },\r\n   isAuth: null,\r\n   isFetchingPhoto: false,\r\n   isFetchingUserData: false,\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n         return {\r\n            ...state,\r\n            user: {\r\n               username: action.username,\r\n               photo: action.photoUrl ? `http://localhost:8000${action.photoUrl}`: null\r\n            },\r\n         };\r\n      case TOGGLE_IS_FETCHING_USER_DATA:\r\n         return {\r\n            ...state,\r\n            isFetchingUserData: action.boolean\r\n         };\r\n      case TOGGLE_IS_FETCHING_PHOTO:\r\n         return {\r\n            ...state,\r\n            isFetchingPhoto: action.boolean\r\n         };\r\n      case TOGGLE_IS_AUTH:\r\n         return {\r\n            ...state,\r\n            isAuth: action.boolean\r\n         };\r\n      case UPDATE_PHOTO:\r\n         return {\r\n            ...state,\r\n            user: {\r\n               ...state.user,\r\n               photo: action.photoUrl,\r\n            }\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\n\r\n// ACTION_CREATORS here:\r\nconst setUserData = (username, photoUrl) =>\r\n   ({ type: SET_USER_DATA, username, photoUrl });\r\n\r\nconst toggleIsFetchingUserData = (boolean) =>\r\n   ({ type: TOGGLE_IS_FETCHING_USER_DATA, boolean });\r\n\r\nconst toggleIsFetchingPhoto = (boolean) =>\r\n   ({ type: TOGGLE_IS_FETCHING_PHOTO, boolean });\r\n\r\nconst toggleIsAuth = (boolean) =>\r\n   ({ type: TOGGLE_IS_AUTH, boolean })\r\n\r\nconst updatePhotoUrl = (photoUrl) => \r\n   ({ type: UPDATE_PHOTO, photoUrl });\r\n\r\n\r\n// THUNKS here:\r\nexport const getUserData = () => async (dispatch) => {\r\n   dispatch(toggleIsFetchingUserData(true));\r\n   const data = await AuthAPI.getMyUserInfo();\r\n   if (data) {\r\n      dispatch(setUserData(data.username, data.photo));\r\n      dispatch(toggleIsAuth(true));\r\n   } else {\r\n      dispatch(toggleIsAuth(false));\r\n   }\r\n   dispatch(toggleIsFetchingUserData(false));\r\n};\r\n\r\nexport const login = (body) => async (dispatch) => {\r\n   const status = await AuthAPI.login(body);\r\n   if (status === 201) {\r\n      dispatch(getUserData());\r\n   } else {\r\n      const message = status === 400 ? 'Incorrect login or password' : 'Some error occured';\r\n      dispatch(stopSubmit('login', {_error: message}));\r\n   }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   const status = await AuthAPI.logout();\r\n   if (status === 200) {\r\n      dispatch(setUserData(null, null));\r\n      dispatch(toggleIsAuth(false));\r\n   }\r\n};\r\n\r\nexport const registrate = (body) => async (dispatch) => {\r\n   const status = await AuthAPI.registration(body);\r\n   if (status === 201) {\r\n      dispatch(login({ username: body.username, password: body.password1 }));\r\n   } else {\r\n      const message = status === 400 ? 'Login is already taken or different passwords entered' : 'Some error occured';\r\n      dispatch(stopSubmit('registration', {_error: message}));\r\n   }\r\n};\r\n\r\nexport const updatePhoto = (file) => async (dispatch) => {\r\n   dispatch(toggleIsFetchingPhoto(true));\r\n   const data = await UserDataAPI.updatePhoto(file);\r\n   if (data) {\r\n      dispatch(updatePhotoUrl(data.photo));\r\n   }\r\n   dispatch(toggleIsFetchingPhoto(false));\r\n};\r\n\r\n\r\nexport default authReducer;","import { getUserData } from './auth-reducer';\r\n\r\nconst SET_IS_INITIALIZED = 'my-app/app/SET_IS_INITIALIZED';\r\n\r\nconst initialState = {\r\n   isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_IS_INITIALIZED:\r\n         return {\r\n            ...state,\r\n            isInitialized: action.boolean\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\n\r\n// ACTION_CREATORS here:\r\nconst setIsInitialized = (boolean) =>\r\n   ({ type: SET_IS_INITIALIZED, boolean })\r\n\r\n\r\n// THUNKS here:\r\nexport const init = () => async (dispatch) => {\r\n   await dispatch(getUserData());\r\n   dispatch(setIsInitialized(true));\r\n};\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport mainReducer from './main-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n   main: mainReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n   app: appReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","export const selectIsAuth = state => state.auth.isAuth;\r\n\r\nexport const selectGroups = state => state.main.groups;\r\n\r\nexport const selectUsername = state => state.auth.user.username;\r\n\r\nexport const selectUserPhoto = state => state.auth.user.photo;\r\n\r\nexport const selectIsFetchingGroups = state => state.main.isFetching;\r\n\r\nexport const selectIsFetchingUser = state => state.auth.isFetchingUserData;\r\n\r\nexport const selectIsFiltered = state => state.main.isFiltered;\r\n\r\nexport const selectMiniGroups = state => state.main.miniGroups;\r\n\r\nexport const selectMiniGroupsIsFetching = state => state.main.isFetchingMiniGroups;\r\n\r\nexport const selectIsFetchingPhoto = state => state.auth.isFetchingPhoto;","import React from 'react';\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={hasError ? 'authField field_wrapper_error' : 'authField'}>\r\n         <input {...input} {...props} />\r\n         { hasError && <span className='input__error'>{meta.error}</span>}\r\n      </div>\r\n   );\r\n};\r\n\r\n\r\nexport const Select = ({ input, meta, children, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={hasError ? 'field_wrapper_error' : ''}>\r\n         <select {...input} {...props}>\r\n            {children}\r\n         </select>\r\n         { hasError && <span className='input__error'>{meta.error}</span>}\r\n      </div>\r\n   );\r\n};","export const required = (value) => {\r\n   if (!value) {\r\n      return 'This field is required!';\r\n   }\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols!`;\r\n   }\r\n};\r\n\r\nexport const usernameTemplate = (value) => {\r\n   if (!/^[\\w.@+-]+$/.test(value)) {\r\n      return 'Usernames may contain alphanumeric, _, @, +, . and - characters';\r\n   }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { createGroup } from '../../../redux/main-reducer';\r\nimport { Input } from '../../common/FormControl';\r\nimport { required, maxLengthCreator } from '../../../api/validators';\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet GroupCreationForm = (props) => {\r\n   return (\r\n      <form className='sidePanel__block' method='POST' onSubmit={props.handleSubmit}>\r\n         <div className='sidePanel__field'>\r\n            <Field component={Input} name='name' className='form__input'\r\n               placeholder='Groupname:' validate={[required, maxLength30]} />\r\n         </div>\r\n         <button type='submit' className='form__submit'>Create</button>\r\n      </form>\r\n   );\r\n};\r\n\r\n\r\nGroupCreationForm = reduxForm({\r\n   form: 'groupCreation',\r\n   onSubmitSuccess: (_, dispatch) => dispatch(reset('groupCreation')),\r\n})(GroupCreationForm);\r\n\r\n\r\nconst GroupCreation = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.createGroup(formData);\r\n   };\r\n\r\n   return <GroupCreationForm onSubmit={onSubmit} />;\r\n};\r\n\r\n\r\nexport default connect(null, { createGroup })(GroupCreation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updatePhoto } from '../../../redux/auth-reducer';\r\n\r\n\r\nconst UpdatePhotoForm = (props) => {\r\n   const onSubmit = (e) => {\r\n      if (e.target.children[0].children[0].files.length) {\r\n         props.updatePhoto(e.target.children[0].children[0].files[0]);\r\n         e.target.children[0].children[0].value = '';\r\n      }\r\n\r\n      e.preventDefault();\r\n   };\r\n\r\n   return (\r\n      <form className='sidePanel__block' method='POST' onSubmit={onSubmit}>\r\n         <div className='sidePanel__field'>\r\n            <input type='file' name='photo' className='form__input' placeholder='Groupname:' accept='.jpg,.jpeg,.png'/>\r\n         </div>\r\n         <button type='submit' className='form__submit'>Update</button>\r\n      </form>\r\n   );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { updatePhoto })(UpdatePhotoForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectMiniGroups } from '../../../redux/selectors';\r\n\r\nconst SelectGroupOptions = (props) => {\r\n   return props.groups.map(elem => <option key={elem.id} value={elem.id}>{elem.name}</option>);\r\n};\r\n\r\nexport default connect(state => ({\r\n   groups: selectMiniGroups(state),\r\n}), {})(SelectGroupOptions);","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport SelectGroupOptionsContainer from './SelectGroupOptionsContainer';\r\nimport { createTask } from '../../../redux/main-reducer';\r\nimport { required, maxLengthCreator } from '../../../api/validators';\r\nimport { Input, Select } from '../../common/FormControl';\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet TaskCreationForm = (props) => {\r\n   return (\r\n      <form className='sidePanel__block' method='POST' onSubmit={props.handleSubmit}>\r\n         <div className='sidePanel__field'>\r\n            <Field component={Select} className='sidePanel__select' name='group_id' validate={[required]}>\r\n               <SelectGroupOptionsContainer />\r\n            </Field>\r\n         </div>\r\n         <div className='sidePanel__field'>\r\n            <Field component={Input} className='form__input' name='taskname'\r\n               placeholder='Taskname:' validate={[required, maxLength30]} />\r\n         </div>\r\n         <div className='sidePanel__field'>\r\n            <Field component={Input} name='deadline' type='datetime-local'\r\n               className='form__input sidePanel__deadline' validate={[required, maxLength30]} />\r\n         </div>\r\n         <button type='submit' className='form__submit'>Create</button>\r\n      </form>\r\n   );\r\n};\r\n\r\n\r\nTaskCreationForm = reduxForm({\r\n   form: 'taskCreation',\r\n   onSubmitSuccess: (_, dispatch) => dispatch(reset('taskCreation')),\r\n})(TaskCreationForm);\r\n\r\n\r\nconst TaskCreation = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.createTask(formData, +formData.group_id);\r\n   }\r\n\r\n   return <TaskCreationForm onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default connect(null, { createTask })(TaskCreation);","import React from 'react';\r\n\r\nconst GroupLink = (props) => {\r\n   return (\r\n      <div className='sidePanel__group'>\r\n         <svg className='sidePanel__group-icon' width='19px' viewBox=\"-32 0 440 440.5\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path className='path' d=\"m326.648438 31.300781h-17.5v-21.300781c0-5.523438-4.476563-10-10-10-5.519532 0-10 4.476562-10 10v21.398438h-201.898438v-21.398438c0-5.523438-4.476562-10-10-10s-10 4.476562-10 10v21.398438h-17c-27.609375.011718-49.988281 22.390624-50 50v309.101562c.011719 27.609375 22.390625 49.988281 50 50h276.300781c27.609375-.011719 49.988281-22.390625 50-50v-309.199219c0-27.574219-22.324219-49.945312-49.902343-50zm30 359.097657c-.046876 16.550781-13.449219 29.953124-30 30h-276.398438c-16.546875-.046876-29.953125-13.449219-30-30v-309.097657c.046875-16.550781 13.453125-29.953125 30-30h17v15.5c0 5.523438 4.476562 10 10 10s10-4.476562 10-10v-15.5h201.898438v15.5c0 5.523438 4.480468 10 10 10 5.523437 0 10-4.476562 10-10v-15.5h17.5c16.550781.046875 29.953124 13.449219 30 30zm0 0\"/>\r\n            <path className='path' d=\"m127.449219 212-36.898438 35.199219-17-17c-3.894531-3.894531-10.207031-3.894531-14.101562 0s-3.894531 10.207031 0 14.101562l23.902343 23.898438c1.875 1.890625 4.4375 2.9375 7.097657 2.902343 2.582031.023438 5.066406-.984374 6.902343-2.800781l43.898438-42c2.597656-2.457031 3.679688-6.117187 2.828125-9.589843-.851563-3.472657-3.503906-6.222657-6.941406-7.195313-3.441407-.976563-7.140625-.027344-9.6875 2.484375zm0 0\"/>\r\n            <path className='path' d=\"m310.449219 230.199219h-115c-5.523438 0-10 4.476562-10 10 0 5.523437 4.476562 10 10 10h115c5.523437 0 10-4.476563 10-10 0-5.523438-4.476563-10-10-10zm0 0\"/>\r\n            <path className='path' d=\"m127.449219 112-36.898438 35.199219-17-17c-3.894531-3.894531-10.207031-3.894531-14.101562 0s-3.894531 10.207031 0 14.101562l23.902343 23.898438c1.875 1.890625 4.4375 2.9375 7.097657 2.902343 2.582031.023438 5.066406-.984374 6.902343-2.800781l43.898438-42c2.597656-2.457031 3.679688-6.117187 2.828125-9.589843-.851563-3.472657-3.503906-6.222657-6.941406-7.195313-3.441407-.976563-7.140625-.027344-9.6875 2.484375zm0 0\"/>\r\n            <path className='path' d=\"m310.449219 130.199219h-115c-5.523438 0-10 4.476562-10 10 0 5.523437 4.476562 10 10 10h115c5.523437 0 10-4.476563 10-10 0-5.523438-4.476563-10-10-10zm0 0\"/>\r\n            <path className='path' d=\"m127.449219 312-36.898438 35.199219-17-17c-3.894531-3.894531-10.207031-3.894531-14.101562 0s-3.894531 10.207031 0 14.101562l23.902343 23.898438c1.875 1.890625 4.4375 2.9375 7.097657 2.902343 2.582031.023438 5.066406-.984374 6.902343-2.800781l43.898438-42c2.597656-2.457031 3.679688-6.117187 2.828125-9.589843-.851563-3.472657-3.503906-6.222657-6.941406-7.195313-3.441407-.976563-7.140625-.027344-9.6875 2.484375zm0 0\"/>\r\n            <path className='path' d=\"m310.449219 330.199219h-115c-5.523438 0-10 4.476562-10 10 0 5.523437 4.476562 10 10 10h115c5.523437 0 10-4.476563 10-10 0-5.523438-4.476563-10-10-10zm0 0\"/>\r\n         </svg>\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GroupLink;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMiniGroups } from '../../../redux/main-reducer';\r\nimport { selectMiniGroups, selectMiniGroupsIsFetching } from '../../../redux/selectors';\r\nimport GroupLink from './GroupLink';\r\n\r\n\r\nconst GroupLinks = ({ miniGroups, isFetching, getMiniGroups }) => {\r\n   useEffect(() => {\r\n      getMiniGroups();\r\n   }, [getMiniGroups]);\r\n\r\n   return <>\r\n      {(!!miniGroups.length || isFetching) && <p className='sidePanel__heading'>Groups</p>}\r\n      <div className='sidePanel__block'>\r\n         {isFetching ?\r\n            <GroupLinksLoading count={5} />\r\n            :\r\n            miniGroups.map(elem =>\r\n               <GroupLink key={elem.id}>\r\n                  <span className='sidePanel__groupname'>{elem.name}</span>\r\n               </GroupLink>\r\n            )\r\n         }\r\n      </div>\r\n   </>;\r\n};\r\n\r\nconst GroupLinksLoading = props => {\r\n   const elems = [];\r\n   for (let i = 0; i < props.count; i++) {\r\n      elems.push(\r\n         <GroupLink key={i}>\r\n            <div className='sidePanel__load-group'></div>\r\n         </GroupLink>\r\n      );\r\n   }\r\n\r\n   return elems;\r\n};\r\n\r\nexport default connect(state => ({\r\n   miniGroups: selectMiniGroups(state),\r\n   isFetching: selectMiniGroupsIsFetching(state),\r\n}), { getMiniGroups })(GroupLinks);","import React from 'react';\r\n\r\nconst Preloader = ({ styles }) => {\r\n   return <div className='preloader' style={styles}></div>;\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectIsFetchingUser, selectUsername, selectUserPhoto, selectIsFetchingPhoto } from '../../../redux/selectors';\r\nimport Preloader from '../../common/Preloader';\r\n\r\nconst Avatar = ({ isFetchingUserData, isFetchingPhoto, photoUrl, username }) => {\r\n   return <>\r\n      <div className='sidePanel__avatar'>\r\n         {isFetchingUserData ?\r\n            <div className='avatar_loading'></div>\r\n            :\r\n            <>\r\n               {isFetchingPhoto && <Preloader styles={{position: 'absolute'}} />}\r\n               {isFetchingPhoto && <div className='avatar_blur'></div>}\r\n               {photoUrl && <img src={photoUrl} alt='user avatar' />}\r\n            </>\r\n         }\r\n      </div>\r\n      {isFetchingUserData ?\r\n         <div className='username_loading'></div>\r\n         :\r\n         <h2 className='sidePanel__username'>{username}</h2>\r\n      }\r\n   </>;\r\n};\r\n\r\nexport default connect(state => ({\r\n   isFetchingUserData: selectIsFetchingUser(state),\r\n   isFetchingPhoto: selectIsFetchingPhoto(state),\r\n   photoUrl: selectUserPhoto(state),\r\n   username: selectUsername(state),\r\n}))(Avatar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../../redux/auth-reducer';\r\nimport { selectGroups, selectUsername, selectUserPhoto, selectIsFetchingUser, selectIsFetchingGroups } from '../../redux/selectors';\r\nimport GroupCreationForm from './GroupCreationForm/GroupCreationForm';\r\nimport UpdatePhotoForm from './UpdatePhotoForm/UpdatePhotoForm';\r\nimport TaskCreationFormContainer from './TaskCreationForm/TaskCreationForm';\r\nimport GroupLinks from './GroupLinks/GroupLinks';\r\nimport Avatar from './Avatar/Avatar';\r\n\r\n\r\nconst Aside = () => {\r\n   return (\r\n      <aside className='sidePanel'>\r\n         <Avatar />\r\n         <p className='sidePanel__heading'>Update photo</p>\r\n         <UpdatePhotoForm />\r\n         <GroupLinks />\r\n         <p className='sidePanel__heading'>Create group</p>\r\n         <GroupCreationForm />\r\n         <p className='sidePanel__heading'>Create task</p>\r\n         <TaskCreationFormContainer />\r\n      </aside>\r\n   );\r\n};\r\n\r\n\r\nexport default connect(state => ({\r\n   groups: selectGroups(state),\r\n   username: selectUsername(state),\r\n   photoUrl: selectUserPhoto(state),\r\n   isFetchingUserData: selectIsFetchingUser(state),\r\n   isFetchingGroups: selectIsFetchingGroups(state),\r\n}), { getUserData })(Aside);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { getUserGroups } from '../../../redux/main-reducer';\r\nimport { selectIsFetchingGroups, selectIsFiltered } from '../../../redux/selectors';\r\nimport { Input } from '../../common/FormControl';\r\n\r\n\r\nlet Search = ({ handleSubmit, isFiltered, isFetching, getUserGroups, reset }) => {\r\n   const handleReset = () => {\r\n      reset('search');\r\n      getUserGroups();\r\n   };\r\n      \r\n   return <>\r\n      <form autoComplete='off' className='main__form search' method='GET' onSubmit={handleSubmit}>\r\n         <Field name='filterText' component={Input} className='search__input'\r\n            placeholder='Search a task:' />\r\n         <button disabled={isFetching} type='submit' className='search__button'>\r\n            <svg width='13' height='13' viewBox='0 0 13 13' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n               <path className='path' d='M12.5847 11.8409L9.49065 8.623C10.2862 7.67732 10.7221 6.48745 10.7221 5.24875C10.7221 2.35463 8.36742 0 5.47331 0C2.5792 0 0.224564 2.35463 0.224564 5.24875C0.224564 8.14286 2.5792 10.4975 5.47331 10.4975C6.5598 10.4975 7.59517 10.1698 8.48038 9.5477L11.5979 12.7901C11.7282 12.9254 11.9035 13 12.0913 13C12.2691 13 12.4377 12.9322 12.5657 12.809C12.8378 12.5472 12.8464 12.1132 12.5847 11.8409ZM5.47331 1.36924C7.61251 1.36924 9.35282 3.10954 9.35282 5.24875C9.35282 7.38795 7.61251 9.12825 5.47331 9.12825C3.3341 9.12825 1.5938 7.38795 1.5938 5.24875C1.5938 3.10954 3.3341 1.36924 5.47331 1.36924Z' fill='black' />\r\n            </svg>\r\n         </button>\r\n      </form>\r\n      { isFiltered && <button onClick={handleReset} className='reset-filtering'>Reset</button> }\r\n   </>;\r\n};\r\n\r\nSearch = reduxForm({ form: 'search' })(Search);\r\n\r\nconst SearchForm = (props) => {\r\n   const onSubmit = (formData) => {\r\n      if (formData.filterText) {\r\n         props.getUserGroups(formData.filterText);\r\n      }\r\n   };\r\n\r\n   return <Search onSubmit={onSubmit} {...props} />;\r\n}\r\n\r\nexport default connect(state => ({\r\n   isFiltered: selectIsFiltered(state),\r\n   isFetching: selectIsFetchingGroups(state),\r\n}), { getUserGroups, reset })(SearchForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../../redux/auth-reducer';\r\nimport { selectIsAuth } from '../../../redux/selectors';\r\nimport Search from './SearchForm';\r\n\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n   return (\r\n      <header className='main__header'>\r\n         <Search />\r\n         {props.isAuth && <button className='red-button' onClick={props.logout}>Logout</button> }\r\n      </header>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: selectIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);;","export function getColumns(columnsCount, data) {\r\n   const template = [];\r\n\r\n   for (let i = 0; i < columnsCount; i++) {\r\n      template.push([]);\r\n   }\r\n\r\n   data.forEach((elem, index) => {\r\n      const column = Math.ceil(index % columnsCount);\r\n      template[column].push(elem);\r\n   });\r\n\r\n   return template;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateTaskGroup } from '../../../../redux/main-reducer';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\n\r\n\r\nconst GroupEditForm = (props) => {\r\n   // radio-buttons logic:\r\n   const [isDeleted, setIsDeleted] = useState(false);\r\n   const selectDeleted = () => {setIsDeleted(true)};\r\n   const reset = () => {setIsDeleted(false);}\r\n\r\n   const initialValues = { name: props.heading, action: 'none' };\r\n\r\n   const handleSubmit = (formData, { setSubmitting }) => {\r\n      if (formData.name === props.heading) {\r\n         delete formData.name;\r\n      }\r\n      if (formData.action === 'none') {\r\n         delete formData.action;\r\n      }\r\n      if (Object.keys(formData).length !== 0) {\r\n         formData['id'] = props.id;\r\n         props.updateTaskGroup(formData, props.id);\r\n      }\r\n      props.onToggleEditMode();\r\n      setSubmitting(false);\r\n   };\r\n\r\n   const validate = values => {\r\n      const errors = {};\r\n      if (!values.name) {\r\n         errors.name = 'This field is required!';\r\n      }\r\n      return errors;\r\n   };\r\n\r\n   \r\n   return (\r\n      <Formik initialValues={initialValues} validate={validate} onSubmit={handleSubmit}>\r\n         {({ isSubmitting }) => (\r\n         <Form className='edit-group group__header'>\r\n            <div className='edit-group__column'>\r\n               <Field type='text' name='name' className='form__input group__edit-input' placeholder='Groupname:' />\r\n               <ErrorMessage name='name' render={msg => <span className='input__error'>{msg}</span>} />\r\n            </div>\r\n            <div className=\"edit-group__buttons\">\r\n               <label onClick={selectDeleted} className={'red-button' + (isDeleted ? ' action_selected' : '')}>\r\n                  <Field type='radio' value='delete' name='action' className='form__input hidden-radio' />\r\n               Delete</label>\r\n               <label onClick={reset} className='none-button'>\r\n                  <Field type='radio' value='none' name='action' className='form__input hidden-radio' />\r\n               None</label>\r\n               <button disabled={isSubmitting} type='submit' className='edit-button save-button'>\r\n                  <svg height='19' viewBox='0 0 512.007 512.007' width='26' xmlns='http://www.w3.org/2000/svg'>\r\n                     <g>\r\n                        <path className='path' d='m511.927 126.537c-.279-2.828-1.38-5.666-3.315-8.027-.747-.913 6.893 6.786-114.006-114.113-2.882-2.882-6.794-4.395-10.612-4.394-9.096 0-329.933 0-338.995 0-24.813 0-45 20.187-45 45v422c0 24.813 20.187 45 45 45h422c24.813 0 45-20.187 45-45 .001-364.186.041-339.316-.072-340.466zm-166.927-96.534v98c0 8.271-6.729 15-15 15h-19v-113zm-64 0v113h-139c-8.271 0-15-6.729-15-15v-98zm64 291h-218v-19c0-8.271 6.729-15 15-15h188c8.271 0 15 6.729 15 15zm-218 161v-131h218v131zm355-15c0 8.271-6.729 15-15 15h-92c0-19.555 0-157.708 0-180 0-24.813-20.187-45-45-45h-188c-24.813 0-45 20.187-45 45v180h-52c-8.271 0-15-6.729-15-15v-422c0-8.271 6.729-15 15-15h52v98c0 24.813 20.187 45 45 45h188c24.813 0 45-20.187 45-45v-98h2.787l104.213 104.214z'/>\r\n                     </g>\r\n                  </svg>\r\n               </button>\r\n            </div>\r\n         </Form>\r\n         )}\r\n      </Formik>\r\n   );\r\n}\r\n\r\nexport default connect((_, ownProps) => ({...ownProps}), { updateTaskGroup })(GroupEditForm);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { updateTodoTask } from '../../../../../redux/main-reducer';\r\n\r\n\r\nconst TaskEditForm = (props) => {\r\n   // radio-buttons logic:\r\n   const [isSelected, setIsSelected] = useState([false, false]);\r\n   const completeTask = () => {setIsSelected([true, false])};\r\n   const deleteTask = () => {setIsSelected([false, true])};\r\n   const reset = () => {setIsSelected([false, false]);}\r\n\r\n   const initialValues = { name: props.taskName, deadline: props.deadline, action: 'none' };\r\n\r\n   const handleSubmit = (formData, { setSubmitting }) => {\r\n      // If user didn't change taskName in the form,\r\n      // don't send taskName to the server\r\n      if (formData.name === props.taskName) {\r\n         delete formData.name;\r\n      }\r\n      // If action is 'none', it means that user didn't touch \r\n      // action buttons or they reset it. So the server mustn't recieve\r\n      // 'none' in action\r\n      if (formData.action === 'none') {\r\n         delete formData.action;\r\n      }\r\n      // Don't send empty deadline to the server\r\n      if (!formData.deadline) {\r\n         delete formData.deadline;\r\n      }\r\n      if (Object.keys(formData).length !== 0) {\r\n         // If after all checks formData is not empty,\r\n         // client send POST request to the server\r\n         formData['id'] = props.id;\r\n         props.updateTodoTask(formData, props.id, formData.name, props.groupId);\r\n      }\r\n      props.onToggleEditMode();\r\n      setSubmitting(false);\r\n   };\r\n\r\n   const validate = values => {\r\n      const errors = {};\r\n      if (!values.name) {\r\n         errors.name = 'This field is required!';\r\n      }\r\n      return errors;\r\n   };\r\n\r\n   return (\r\n      <Formik initialValues={initialValues} validate={validate} onSubmit={handleSubmit}>\r\n         {({ isSubmitting }) => (\r\n         <Form className='group__task task'>\r\n            { props.isCompleted ? \r\n            <div className='task__state red'><span></span></div>\r\n            : <div className='task__state'><p>?</p></div> }\r\n            <div className='task__data'>\r\n               { !props.isCompleted ?\r\n               <>\r\n               <Field type='text' name='name' className='form__input' placeholder='Taskname:' />\r\n               <ErrorMessage name='name' render={msg => <span className='input__error'>{msg}</span>} />\r\n               </>\r\n               : <h3 className='task__name'>{props.taskName}</h3> }\r\n               <div className='task__tags'>\r\n                  <div className='task__tag'>\r\n                     <svg className='task__clock' width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n                        <path className='path' d='M5.79319 10.5895L8.30289 8.70718V4.87297C8.30289 4.48745 8.61451 4.17582 9.00004 4.17582C9.38556 4.17582 9.69719 4.48745 9.69719 4.87297V9.05579C9.69719 9.27538 9.594 9.48245 9.41833 9.61351L6.6298 11.7049C6.50433 11.799 6.3579 11.8444 6.21222 11.8444C5.99959 11.8444 5.79045 11.7488 5.65379 11.5648C5.42229 11.2573 5.48504 10.8202 5.79319 10.5895Z' fill='#DBDBDB'/>\r\n                        <path className='path' d='M9 0C13.9629 0 18 4.0371 18 9C18 13.9629 13.9629 18 9 18C4.0371 18 0 13.9629 0 9C0 4.0371 4.0371 0 9 0ZM9 16.6057C13.1933 16.6057 16.6057 13.1933 16.6057 9C16.6057 4.80674 13.1933 1.39426 9 1.39426C4.80604 1.39426 1.39426 4.80674 1.39426 9C1.39426 13.1933 4.80674 16.6057 9 16.6057Z' fill='#DBDBDB'/>\r\n                     </svg>\r\n                     { !props.isCompleted ?\r\n                     <Field type='datetime-local' name='deadline' className='form__input' placeholder='Taskname:' />\r\n                     : <span className='task__tagText'>{props.typeName}</span> }\r\n                     \r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className='task__time'>\r\n               <p className='task__createdAt'>{props.createdAt}</p>\r\n               <div className='task__timeLeft'>\r\n                  { !props.isCompleted && <label onClick={completeTask} className={'task__complete' + (isSelected[0] ? ' action_selected' : '')}>\r\n                     <Field type='radio' value='complete' name='action' className='form__input hidden-radio' />\r\n                  Complete</label>}\r\n                  <label onClick={deleteTask} className={'task__delete red-button' + (isSelected[1] ? ' action_selected' : '')}>\r\n                     <Field type='radio' value='delete' name='action' className='form__input hidden-radio' />\r\n                  Delete</label>\r\n                  <label onClick={reset} className='none-button'>\r\n                     <Field type='radio' value='none' name='action' className='form__input hidden-radio' />\r\n                  None</label>\r\n               </div>\r\n            </div>\r\n            <button disabled={isSubmitting} type='submit' className='edit-button save-button'>\r\n               <svg height='19' viewBox='0 0 512.007 512.007' width='26' xmlns='http://www.w3.org/2000/svg'>\r\n                  <g>\r\n                     <path className='path' d='m511.927 126.537c-.279-2.828-1.38-5.666-3.315-8.027-.747-.913 6.893 6.786-114.006-114.113-2.882-2.882-6.794-4.395-10.612-4.394-9.096 0-329.933 0-338.995 0-24.813 0-45 20.187-45 45v422c0 24.813 20.187 45 45 45h422c24.813 0 45-20.187 45-45 .001-364.186.041-339.316-.072-340.466zm-166.927-96.534v98c0 8.271-6.729 15-15 15h-19v-113zm-64 0v113h-139c-8.271 0-15-6.729-15-15v-98zm64 291h-218v-19c0-8.271 6.729-15 15-15h188c8.271 0 15 6.729 15 15zm-218 161v-131h218v131zm355-15c0 8.271-6.729 15-15 15h-92c0-19.555 0-157.708 0-180 0-24.813-20.187-45-45-45h-188c-24.813 0-45 20.187-45 45v180h-52c-8.271 0-15-6.729-15-15v-422c0-8.271 6.729-15 15-15h52v98c0 24.813 20.187 45 45 45h188c24.813 0 45-20.187 45-45v-98h2.787l104.213 104.214z'/>\r\n                  </g>\r\n               </svg>\r\n            </button>\r\n         </Form>\r\n         )}\r\n      </Formik>\r\n   );\r\n};\r\n\r\n\r\nexport default connect((_, ownProps) => ({...ownProps}), { updateTodoTask })(TaskEditForm);","import React, { useState } from 'react';\r\nimport TaskEditForm from './TaskEditForm';\r\n\r\n\r\nconst Task = (props) => {\r\n   const [isEdit, setIsEdit] = useState(false);\r\n\r\n   const onToggleEditMode = () => {\r\n      setIsEdit(prev => !prev);\r\n   };\r\n\r\n   if (isEdit) {\r\n      return <TaskEditForm {...props} onToggleEditMode={onToggleEditMode} />;\r\n   } else {\r\n      return (\r\n         <div className='group__task task'>\r\n            <div className={`task__state ${props.isCompleted ? 'red': 'green'}`}>\r\n               <span></span>\r\n            </div>\r\n            <div className='task__data'>\r\n               <h3 className='task__name'>{props.taskName}</h3>\r\n               <div className='task__tags'>\r\n                  <div className='task__tag'>\r\n                     <svg className='task__clock' width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n                        <path className='path' d='M5.79319 10.5895L8.30289 8.70718V4.87297C8.30289 4.48745 8.61451 4.17582 9.00004 4.17582C9.38556 4.17582 9.69719 4.48745 9.69719 4.87297V9.05579C9.69719 9.27538 9.594 9.48245 9.41833 9.61351L6.6298 11.7049C6.50433 11.799 6.3579 11.8444 6.21222 11.8444C5.99959 11.8444 5.79045 11.7488 5.65379 11.5648C5.42229 11.2573 5.48504 10.8202 5.79319 10.5895Z' fill='#DBDBDB'/>\r\n                        <path className='path' d='M9 0C13.9629 0 18 4.0371 18 9C18 13.9629 13.9629 18 9 18C4.0371 18 0 13.9629 0 9C0 4.0371 4.0371 0 9 0ZM9 16.6057C13.1933 16.6057 16.6057 13.1933 16.6057 9C16.6057 4.80674 13.1933 1.39426 9 1.39426C4.80604 1.39426 1.39426 4.80674 1.39426 9C1.39426 13.1933 4.80674 16.6057 9 16.6057Z' fill='#DBDBDB'/>\r\n                     </svg>\r\n                     <span className='task__tagText'>{props.typeName}</span>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className='task__time'>\r\n               <p className='task__createdAt'>{props.createdAt}</p>\r\n               <p className='task__timeLeft'>Interval: {props.timeLeft}</p>\r\n            </div>\r\n            <button className='edit-button' onClick={onToggleEditMode} style={{ margin: '0 0 0 10px' }}>\r\n               <svg width='19' height='19' viewBox='0 0 19 19' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n                  <path className='path' d='M15.8076 1.96028C14.9265 1.08081 13.4998 1.08081 12.6188 1.96028L11.8206 2.76287L3.32365 11.2553L3.30559 11.2735C3.30122 11.2778 3.30122 11.2825 3.29656 11.2825C3.28753 11.296 3.27399 11.3094 3.2651 11.323C3.2651 11.3275 3.26045 11.3275 3.26045 11.332C3.25142 11.3456 3.24705 11.3546 3.23788 11.3681C3.2335 11.3727 3.2335 11.377 3.22899 11.3817C3.22447 11.3952 3.21996 11.4043 3.2153 11.4178C3.2153 11.4222 3.21093 11.4222 3.21093 11.4268L1.32572 17.0959C1.27042 17.2573 1.31246 17.436 1.43392 17.5558C1.51928 17.64 1.63439 17.6871 1.75417 17.6867C1.80312 17.6858 1.85165 17.6782 1.89849 17.6641L7.56315 15.7744C7.56753 15.7744 7.56753 15.7744 7.57218 15.77C7.58643 15.7658 7.60012 15.7597 7.61267 15.7518C7.6162 15.7514 7.6193 15.7498 7.62184 15.7474C7.63525 15.7384 7.6533 15.7292 7.66685 15.7202C7.68025 15.7113 7.69393 15.6978 7.70748 15.6888C7.71199 15.6841 7.71636 15.6841 7.71636 15.6797C7.72102 15.6752 7.73005 15.6708 7.73456 15.6617L17.0297 6.36654C17.9092 5.48551 17.9092 4.0588 17.0297 3.17791L15.8076 1.96028ZM7.41883 14.7145L4.27987 11.5757L12.1363 3.71923L15.2753 6.85805L7.41883 14.7145ZM3.83773 12.41L6.57999 15.1521L2.46223 16.5231L3.83773 12.41ZM16.3939 5.73508L15.9158 6.2177L12.7767 3.0786L13.2594 2.59611C13.7875 2.06849 14.6434 2.06849 15.1716 2.59611L16.3982 3.82278C16.9223 4.35323 16.9204 5.20717 16.3939 5.73508Z' fill='#69C789'/>\r\n               </svg>\r\n            </button>\r\n         </div>\r\n      );\r\n   }\r\n};\r\n\r\nexport default Task;","import React, { useState } from 'react';\r\nimport GroupEditForm from './GroupEditForm';\r\nimport Task from './Task/Task';\r\n\r\n\r\nconst Group = (props) => {\r\n   const [isEdit, setIsEdit] = useState(false);\r\n\r\n   const tasks = props.data.map(elem => {\r\n      return <Task key={elem.id}\r\n         id={elem.id}\r\n         groupId={props.id}\r\n         isCompleted={elem.is_completed}\r\n         deadline={elem.deadline}\r\n         groupname={props.heading}\r\n         taskName={elem.name}\r\n         typeName={elem.task_type}\r\n         createdAt={elem.created_at}\r\n         timeLeft={elem.timedelta} />\r\n   });\r\n\r\n   const onToggleEditMode = () => {\r\n      setIsEdit(prev => !prev);\r\n   };\r\n\r\n   return (\r\n      <section className='main__group group'>\r\n         {isEdit ?\r\n            <GroupEditForm id={props.id} heading={props.heading} onToggleEditMode={onToggleEditMode} />\r\n            :\r\n            <header className='group__header'>\r\n               <h2 className='group__heading'>{props.heading}</h2>\r\n               <div onClick={onToggleEditMode} className='group__settings'>\r\n                  <span></span>\r\n               </div>\r\n            </header>\r\n         }\r\n         {tasks}\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Group;","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserGroups } from '../../../redux/main-reducer';\r\nimport { selectIsFetchingGroups, selectGroups, selectIsFiltered } from '../../../redux/selectors';\r\nimport { useWindowSize } from '../../../api/hooks';\r\nimport { getColumns } from '../../../api/tools';\r\nimport Preloader from '../../common/Preloader';\r\nimport Group from './Group/Group';\r\n\r\n\r\nconst MainBody = ({ getUserGroups, ...props }) => {\r\n   const windowDimensions = useWindowSize();\r\n\r\n   let columns = 2;\r\n   if (windowDimensions.width < 900) {\r\n      columns = 1;\r\n   }\r\n\r\n   useEffect(() => {\r\n      getUserGroups();\r\n   }, [getUserGroups]);\r\n\r\n   return <>\r\n      {props.isFetching ?\r\n         <main className='main__body loading'>\r\n            <Preloader />\r\n         </main>\r\n         :\r\n         <main className='main__body'>\r\n            {getColumns(columns, props.groups).map((elem, index) =>\r\n               <div key={index} className='main__side'>\r\n                  {createGroupElements(elem, props.isFiltered)}\r\n               </div>\r\n            )}\r\n         </main>\r\n      }\r\n   </>;\r\n};\r\n\r\nfunction createGroupElements(data, dependency) {\r\n   return data.map(elem => {\r\n      if (dependency && elem.tasks.length === 0) {\r\n         return null;\r\n      }\r\n      return <Group key={elem.id} id={elem.id} heading={elem.name} data={elem.tasks} isEdit={elem.isEdit} />\r\n   });\r\n}\r\n\r\nexport default connect(state => ({\r\n   groups: selectGroups(state),\r\n   isFiltered: selectIsFiltered(state),\r\n   isFetching: selectIsFetchingGroups(state),\r\n}), { getUserGroups })(MainBody);","import { useEffect, useState } from 'react';\r\n\r\nexport const useWindowSize = () => {\r\n   function getWindowDimensions() {\r\n      const { innerWidth: width, innerHeight: height } = window;\r\n      return { width, height };\r\n   };\r\n   \r\n   const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n   useEffect(() => {\r\n      const handleResize = () => {\r\n         setWindowDimensions(getWindowDimensions());\r\n      }\r\n      window.addEventListener('resize', handleResize);\r\n      return () => {\r\n         window.removeEventListener('resize', handleResize);\r\n      };\r\n   }, []);\r\n\r\n   return windowDimensions;\r\n};\r\n\r\n","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport MainBody from './MainBody/MainBody';\r\n\r\n\r\nconst Main = (props) => {\r\n   return (\r\n      <div className=\"main\">\r\n         <Header />\r\n         <MainBody />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport Aside from '../Aside/Aside';\r\nimport Main from '../Main/Main';\r\n\r\n\r\nconst MainAppPage = () => {\r\n   return (\r\n      <div className='wrapper'>\r\n         <Aside />\r\n         <Main />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default MainAppPage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { selectIsAuth } from '../../redux/selectors';\r\nimport MainAppPage from './MainAppPage';\r\n\r\nconst MainAppPageContainer = (props) => {\r\n   return props.isAuth ? <MainAppPage {...props} /> : <Redirect to='/auth/login' />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: selectIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(MainAppPageContainer);;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { login } from '../../../redux/auth-reducer';\r\nimport { selectIsAuth } from '../../../redux/selectors';\r\nimport { Input } from '../../common/FormControl';\r\nimport { required, maxLengthCreator } from '../../../api/validators';\r\n\r\n\r\nconst maxLength150 = maxLengthCreator(150);\r\n\r\nlet Login = ({ error, handleSubmit }) => {\r\n   return (\r\n      <div className='auth wrapper'>\r\n         <form method='POST' className='auth__form' onSubmit={handleSubmit}>\r\n            <h1 className='auth__heading'>User authorization</h1>\r\n            <Field name='username' component={Input} className='form__input'\r\n               placeholder='Username:' validate={[required, maxLength150]} />\r\n            <Field name='password' component={Input} type='password' className='form__input'\r\n               placeholder='Password:' validate={[required]} />\r\n            {error && <p className='input__error'>{error}</p>}\r\n            <button type='submit' className='form__submit'>Login</button>\r\n         </form>\r\n         <Link className='registration-link' to='/auth/registration'>Registrate</Link>\r\n      </div>\r\n   );\r\n};\r\n\r\nLogin = reduxForm({\r\n   form: 'login',\r\n   onSubmitSuccess: (_, dispatch) => dispatch(reset('login')),\r\n})(Login);\r\n\r\nconst LoginForm = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData);\r\n   };\r\n\r\n   return props.isAuth ? <Redirect to='/' /> : <Login onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default connect(state => ({\r\n   isAuth: selectIsAuth(state),\r\n}), { login })(LoginForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { registrate } from '../../../redux/auth-reducer';\r\nimport { selectIsAuth } from '../../../redux/selectors';\r\nimport { Input } from '../../common/FormControl';\r\nimport { required, maxLengthCreator, usernameTemplate } from '../../../api/validators';\r\n\r\n\r\nconst maxLength150 = maxLengthCreator(150);\r\n\r\nlet Registration = (props) => {\r\n   return (\r\n      <div className='auth wrapper'>\r\n         <form className='auth__form' method='POST' onSubmit={props.handleSubmit}>\r\n            <h1 className='auth__heading'>User registration</h1>\r\n            <Field name='username' component={Input} className='form__input'\r\n               placeholder='Username:' validate={[required, maxLength150, usernameTemplate]} />\r\n            <Field name='password1' component={Input} type='password' className='form__input'\r\n               placeholder='Password:' validate={[required]} />\r\n            <Field name='password2' component={Input} type='password' className='form__input'\r\n               placeholder='Password again:' validate={[required]} />\r\n            {props.error && <p className='input__error'>{props.error}</p>}\r\n            <button type='submit' className='form__submit'>Registrate</button>\r\n         </form>\r\n         <Link className='registration-link' to='/auth/login'>Already have an account? Login</Link>\r\n      </div>\r\n   );\r\n};\r\n\r\nRegistration = reduxForm({\r\n   form: 'registration',\r\n   onSubmitSuccess: (_, dispatch) => dispatch(reset('registration')),\r\n})(Registration);\r\n\r\n\r\nconst RegistrationForm = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.registrate(formData);\r\n   };\r\n\r\n   return props.isAuth ? <Redirect to='/' /> : <Registration onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default connect(state => ({\r\n   isAuth: selectIsAuth(state),\r\n}), { registrate })(RegistrationForm);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { init } from './redux/app-reducer';\nimport MainAppPageContainer from './components/MainAppPage/MainAppPageContainer';\nimport LoginForm from './components/Auth/Login/Login';\nimport RegistrationForm from './components/Auth/Registration/Registration';\nimport Preloader from './components/common/Preloader';\n\n\nclass App extends React.Component {\n   componentDidMount() {\n      this.props.init();\n   }\n\n   render() {\n      if (!this.props.isInitialized) {\n         return (\n            <div className='initalizing loading'>\n               <Preloader />\n            </div>\n         );\n      }\n\n      return (\n         <HashRouter basename='/'>\n            <Route exact path='/' component={MainAppPageContainer} />\n            <Route exact path='/auth/registration' component={RegistrationForm} />\n            <Route exact path='/auth/login' component={LoginForm} />\n         </HashRouter>\n      );\n   }\n}\n\n\nexport default connect(state => ({\n   isInitialized: state.app.isInitialized\n}), { init })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <BrowserRouter>\n         <Provider store={store}>\n            <App />\n         </Provider>\n      </BrowserRouter>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}